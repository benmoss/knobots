# Copyright 2020 The Knative Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Auto Updates

on:
  schedule:
    - cron: '0 1,13 * * 1-5' # 6am/pm Pacific on weekdays

  workflow_dispatch:
    inputs:
      branch:
        description: "Branch Name? (empty for default branch of the respective repository)"
      release:
        description: "Release? (vX.Y) defaults to current release"
      reason:
        description: "Justification?"
        required: true
        default: "Cron"
      pr-empty-deps:
        description: "If true, send update PRs even for deps changes that don't change vendor. Use this only for releases."
        default: "false"
      

jobs:
  meta:
    runs-on: ubuntu-latest
    env:
      #########################################
      #   Update this section each release.   #
      RELEASE: 'v0.22'
      #########################################
    outputs:
      include: ${{ steps.load-matrix.outputs.includes }}
      names: ${{ steps.load-matrix.outputs.names }}

    steps:
    - name: Check out code onto GOPATH
      uses: actions/checkout@v2

    - name: Calculate affected repos
      id: load-matrix
      uses: "./actions/calculate-matrix"
      with:
        action-name: deps
        repo-only: "" # TODO, expose as a parameter

  apply-change:
    name: "Apply Change" # TODO: from metadata?
    needs: meta
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        name: ${{ fromJson(needs.meta.outputs.names) }}
        include: ${{ fromJson(needs.meta.outputs.include) }}
    steps:
    # TODO: parameterize checkouts and paths
    - name: Checkout repo code
      uses: actions/checkout@v2
      with:
        repository: ${{ matrix.name }}
        ref: ${{ github.event.inputs.branch }}
  
    # This is required because the branch setting might be empty (to infer a default), so
    # after checkout we fetch what the checkout action decided to check out.
    - name: Infer branch from checkout
      id: inferbranch
      run: |
        echo "::set-output name=branch::$(git branch --show-current)"

    - name: Apply work
      id: work
      uses: ${{ github.repository }}/actions/update-deps@${{ github.sha }}
      with:
        repo: ${{ matrix.name }}
        include: ${{ matrix.include }}
        branch: "${{ github.event.inputs.branch }}"
        release: "${{ github.event.inputs.release }}"
        reason: "${{ github.event.inputs.reason }}"
        pr-empty-deps: "${{ github.event.inputs.pr-empty-deps }}"

    - name: Create Pull Request
      id: cpr
      if: env.create_pr == "true"
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        committer: "Knative Automation <automation@knative.team>"
        author: "Knative Automation <automation@knative.team>"
        push-to-fork: ${{ matrix.fork }}
        branch: auto-updates/update-deps-${{ steps.inferbranch.outputs.branch }}
        signoff: true
        delete-branch: true

        commit-message: |
          upgrade to latest dependencies
          
          ${{ steps.work.outputs.deplog }}
        title: "[${{ steps.inferbranch.outputs.branch }}] Upgrade to latest dependencies"
        body: |
          ${{ github.event.inputs.reason }} -${{ github.actor }}
          
          /cc ${{ matrix.assignees }}
          /assign ${{ matrix.assignees }}
          
          Produced by: ${{ github.repository }}/actions/update-deps
          
          Details:
          ```
          ${{ steps.updatedeps.outputs.deplog }}
          ```
          

    - name: Report error
      uses: rtCamp/action-slack-notify@v2.1.0
      if: ${{ failure() }}
      env:
        SLACK_ICON: http://github.com/knative-automation.png?size=48
        SLACK_USERNAME: knative-automation
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

        SLACK_CHANNEL: ${{ matrix.channel }}
        SLACK_COLOR: '#8E1600'
        MSG_MINIMAL: 'true'
        SLACK_TITLE: "[${{ steps.inferbranch.outputs.branch }}] Upgrade to latest dependencies for ${{ matrix.name }} failed."
        SLACK_MESSAGE: |
          For detailed logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          ${{ github.event.inputs.reason }} -${{ github.actor }}
